{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-student/add-student.component.css","webpack:///./src/app/add-student/add-student.component.html","webpack:///./src/app/add-student/add-student.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/student-list/student-list.component.css","webpack:///./src/app/student-list/student-list.component.html","webpack:///./src/app/student-list/student-list.component.ts","webpack:///./src/app/student.service.ts","webpack:///./src/app/student.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1zdHVkZW50L2FkZC1zdHVkZW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h3>Create Student</h3>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\" >\\n    <div [hidden]=\\\"submitted\\\" style=\\\"width: 400px;\\\">\\n      <form [formGroup]=\\\"studentsaveform\\\" #savestudent (ngSubmit)=\\\"saveStudent(saveStudent)\\\">\\n\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Student Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"student_name\\\" data-toggle=\\\"tooltip\\\"\\n                 data-placement=\\\"right\\\" title=\\\"Enter Student Name\\\" >\\n              <div class=\\\"alert alert-danger\\\" *ngIf = \\\"(StudentName.touched) && (StudentName.invalid)\\\"\\n                style=\\\"margin-top: 5px;\\\">\\n                  <span *ngIf=\\\"StudentName.errors.required\\\">Student Name is Required</span>\\n                    <span *ngIf = \\\"StudentName.errors.minlength\\\">\\n                        MinLength Error\\n                    </span>\\n                </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Student Batch</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"student_batch\\\"\\n                data-toggle=\\\"tooltip\\\" data-placement=\\\"right\\\" title=\\\"Enter Student Batch\\\">\\n\\n                </div>\\n\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"branch\\\">Student Branch</label>\\n                <select class=\\\"form-control\\\" formControlName=\\\"student_branch\\\" data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"right\\\" title=\\\"Select Student Branch\\\">\\n                    <option value=\\\"null\\\">--Select Branch--</option>\\n                  <option value=\\\"B-Tech\\\">B-Tech</option>\\n                  <option value=\\\"BCA\\\">BCA</option>\\n                  <option value=\\\"MCA\\\">MCA</option>\\n                  <option value=\\\"M-Tech\\\">M-Tech</option>\\n                </select>\\n          </div>\\n\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n      </form>\\n  </div>\\n  </div>\\n  <div class=\\\"col-sm-4\\\"></div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n      <div [hidden]=\\\"!submitted\\\">\\n         <h4>Student Added SuccessFully!</h4>\\n         <button (click)=\\\"addStudentForm()\\\" class='btn btn-primary'>Add More Student</button>\\n      </div>\\n  </div>\\n  <div class=\\\"col-sm-4\\\"></div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { StudentService } from '../student.service';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport { Student } from '../student';\n@Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.css']\n})\nexport class AddStudentComponent implements OnInit {\n\n  constructor(private studentservice: StudentService) { }\n\n  get StudentName() {\n    return this.studentsaveform.get('student_name');\n  }\n\n  get StudentBranch() {\n    return this.studentsaveform.get('student_branch');\n  }\n\n  get StudentBatch() {\n    return this.studentsaveform.get('student_batch');\n  }\n\n  student: Student = new Student();\n  submitted = false;\n\n  studentsaveform = new FormGroup({\n    student_name: new FormControl('' , [Validators.required , Validators.minLength(5) ] ),\n    student_branch: new FormControl(),\n    student_batch: new FormControl()\n  });\n\n  ngOnInit() {\n    this.submitted = false;\n  }\n\n  saveStudent(saveStudent) {\n    this.student = new Student();\n    this.student.studentname = this.StudentName.value;\n    this.student.branch = this.StudentBranch.value;\n    this.student.batch = this.StudentBatch.value;\n\n    this.submitted = true;\n    this.save(this.student);\n  }\n\n\n\n  save(student :any) {\n    this.studentservice.createStudent( this.student.studentname, this.student.branch,this.student.batch)\n      .subscribe(data => console.log(data), error => console.log(error));\n    this.student = new Student();\n  }\n\n  addStudentForm() {\n    this.submitted = false;\n    this.studentsaveform.reset();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StudentListComponent } from './student-list/student-list.component';\nimport { AddStudentComponent } from './add-student/add-student.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'view-student', pathMatch: 'full' },\n  { path: 'view-student', component: StudentListComponent },\n  { path: 'add-student', component: AddStudentComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"    <div  class=\\\"container-fluid\\\">\\r\\n    <nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark\\\">\\r\\n        <ul class=\\\"navbar-nav\\\">\\r\\n          <li class=\\\"nav-item \\\">\\r\\n            <a routerLink=\\\"view-student\\\" class=\\\"nav-link\\\" class=\\\"btn btn-primary active\\\" role=\\\"button\\\" >View Student</a>\\r\\n          </li>&nbsp;\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a  routerLink=\\\"add-student\\\" class=\\\"nav-link\\\" class=\\\"btn btn-primary active\\\" role=\\\"button\\\" >Add Student</a>\\r\\n          </li>          \\r\\n        </ul>\\r\\n      </nav>   \\r\\n        <router-outlet></router-outlet>\\r\\n    </div>\\r\\n    \"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FormSubmit';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {DataTablesModule} from 'angular-datatables';\nimport { StudentListComponent } from './student-list/student-list.component';\nimport { AddStudentComponent } from './add-student/add-student.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StudentListComponent,\n    AddStudentComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    DataTablesModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0dWRlbnQtbGlzdC9zdHVkZW50LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">\\n      <h1 style=\\\"text-align: center\\\">Students</h1><br>\\n      <div class=\\\"row\\\" [hidden]=\\\"!deleteMessage\\\">\\n\\n                <div class=\\\"col-sm-4\\\"></div>\\n                <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"alert alert-info alert-dismissible\\\">\\n                                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n                                <strong>Student Data Deleted</strong>\\n                        </div>\\n                </div>\\n                <div class=\\\"col-sm-4\\\"></div>\\n        </div>\\n    </div>\\n\\n\\n  <div class=\\\"panel-body\\\">\\n      <table  class=\\\"table table-hover table-sm\\\" datatable [dtOptions]=\\\"dtOptions\\\"\\n      [dtTrigger]=\\\"dtTrigger\\\"  >\\n          <thead class=\\\"thead-light\\\">\\n              <tr>\\n                  <th>Student Id</th>\\n                  <th>Student Name</th>\\n                  <th>Student Branch</th>\\n                  <th>Student Batch</th>\\n                  <th>Action</th>\\n\\n              </tr>\\n          </thead>\\n          <tbody>\\n               <tr *ngFor=\\\"let student of students\\\">\\n                  <td>{{student.id}}</td>\\n                  <td>{{student.studentname}}</td>\\n                  <td>{{student.branch}}</td>\\n                  <td>{{student.batch}}</td>\\n                  <td><button (click)=\\\"deleteStudent(student.id)\\\" class='btn btn-primary'><i class=\\\"fa fa-futboll-0\\\">Delete</i></button>&nbsp;\\n                    <button (click)=\\\"updateStudent(student.id)\\\" class='btn btn-info'\\n                    data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">Update</button>\\n                  </td>\\n                </tr>\\n          </tbody><br>\\n      </table>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal\\\" id=\\\"myModal\\\">\\n        <div class=\\\"modal-dialog\\\">\\n          <div class=\\\"modal-content\\\">\\n                <form [formGroup]=\\\"studentupdateform\\\" #updstu (ngSubmit)=\\\"updateStu(updstu)\\\">\\n            <!-- Modal Header -->\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\" style=\\\"text-align: center\\\">Update Student</h4>\\n\\n            </div>\\n\\n            <!-- Modal body -->\\n            <div class=\\\"modal-body\\\" *ngFor=\\\"let student of studentlist \\\" >\\n                <div [hidden]=\\\"isupdated\\\">\\n\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"name\\\">Student Id</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" disabled  formControlName=\\\"student_id\\\" [(ngModel)]=\\\"student.id\\\"  >\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"name\\\">Student Name</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"student_name\\\" [(ngModel)]=\\\"student.studentname\\\"  >\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"name\\\">Student Batch</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"student_batch\\\" [(ngModel)]=\\\"student.batch\\\"  >\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\">Student Branch</label>\\n                  <select class=\\\"form-control\\\" formControlName=\\\"student_branch\\\" [(ngModel)]=\\\"student.branch\\\" required>\\n                    <option value=\\\"B-Tech\\\" [selected]=\\\"'B-Tech' == student.branch\\\">B-Tech</option>\\n                    <option value=\\\"BCA\\\" [selected]=\\\"'BCA' == student.branch\\\">BCA</option>\\n                    <option value=\\\"MCA\\\" [selected]=\\\"'MCA' == student.branch\\\" >MCA</option>\\n                    <option value=\\\"M-Tech\\\" [selected]=\\\"'M-Tech' == student.branch\\\">M-Tech</option>\\n                  </select>\\n            </div>\\n                  </div>\\n                  <div [hidden]=\\\"!isupdated\\\">\\n                      <h4>Student Detail Updated!</h4>\\n                  </div>\\n\\n            </div>\\n\\n            <!-- Modal footer -->\\n            <div class=\\\"modal-footer\\\" >\\n              <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [hidden]=\\\"isupdated\\\">Update</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\" (click)=\\\"changeisUpdate()\\\">Close</button>\\n            </div>\\n\\n        </form>\\n          </div>\\n        </div>\\n      </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { StudentService } from '../student.service';\nimport { Student } from '../student';\nimport { Observable, Subject } from 'rxjs';\n\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.css']\n})\nexport class StudentListComponent implements OnInit {\n\n constructor(private studentservice: StudentService) { }\n\n  get StudentName() {\n    return this.studentupdateform.get('student_name');\n  }\n\n  get StudentBranch() {\n    return this.studentupdateform.get('student_branch');\n  }\n  get StudentId() {\n    return this.studentupdateform.get('student_id');\n  }\n  get StudentBatch() {\n    return this.studentupdateform.get('student_batch');\n  }\n\n  studentsArray: any[] = [];\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n\n\n  students: Observable<Student[]>;\n  student: Student = new Student();\n  deleteMessage = false;\n  studentlist: any;\n  isupdated = false;\n\n  studentupdateform = new FormGroup({\n    student_name: new FormControl('' , [Validators.required , Validators.minLength(5) ] ),\n    student_id: new FormControl(),\n    student_branch: new FormControl(),\n    student_batch: new FormControl()\n  });\n\n\n  ngOnInit() {\n    this.isupdated = false;\n    this.dtOptions = {\n      pageLength: 6,\n      stateSave: true,\n      lengthMenu: [[6, 16, 20, -1], [6, 16, 20, 'All']],\n      processing: true\n    };\n    this.studentservice.getStudentList().subscribe(data => {\n    this.students = data;\n    this.dtTrigger.next();\n    });\n  }\n\n  deleteStudent(id: any) {\n    this.studentservice.deleteStudent(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.deleteMessage = true;\n          this.studentservice.getStudentList().subscribe(data => {\n            this.students = data;\n            });\n        },\n        error => console.log(error));\n  }\n\n\n  updateStudent(id: any) {\n    this.studentservice.getStudent(id)\n      .subscribe(\n        data => {\n          this.studentlist = data;\n        },\n        error => console.log(error));\n  }\n\n  updateStu(updstu) {\n    this.student = new Student();\n    this.student.studentname = this.StudentName.value;\n    this.student.branch = this.StudentBranch.value;\n    this.student.batch = this.StudentBatch.value;\n    this.student.id = this.StudentId.value;\n    console.log(this.StudentBranch.value);\n\n\n    this.studentservice.updateStudent(this.student.id, this.student.studentname,this.student.batch,this.student.branch).subscribe(\n    data => {\n      this.isupdated = true;\n      this.studentservice.getStudentList().subscribe(data => {\n        this.students = data;\n        });\n    },\n    error => console.log(error));\n  }\n\n\n  changeisUpdate() {\n    this.isupdated = false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class StudentService {\n\n  private baseUrl = '/user';\n\n  constructor(private http: HttpClient) { }\n\n  getStudentList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}` + '/getstudentdata');\n  }\n\n  createStudent(studentname: any, branch: any, batch: any): Observable<object> {\n    return this.http.get(`${this.baseUrl}` + '/save-student' + '/' + studentname + '/' + branch + '/' + batch );\n  }\n\n  deleteStudent(id: any): Observable<object> {\n    return this.http.get(`${this.baseUrl}` + '/delete-student' + '/' + id);\n  }\n\n  getStudent(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}` + '/student/' + id);\n  }\n\n  updateStudent(id: any, studentname: any, branch: any, batch: any): Observable<object> {\n    return this.http.get(`${this.baseUrl}` + '/update-student/' + id + '/' + studentname + '/' + branch + '/' + batch );\n  }\n\n}\n","export class Student {\n\n    id:any;\n    studentname:any;\n    batch:any;\n    branch:any;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}